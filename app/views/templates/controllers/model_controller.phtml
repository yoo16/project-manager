<?= '<?php'?>

/**
 * <?= Page::className($values['page']) ?> 
 *
 * @create  <?= $values['page']['created_at'] ?> 
 */

<? if ($values['page']['parent']): ?>
require_once '<?= $values['page']['parent']['name'] ?>Controller.php';
<? else: ?>
require_once 'AppController.php';
<? endif ?>

<? if ($values['page']['parent']): ?>
class <?= $values['page']['name'] ?>Controller extends <?= $values['page']['parent']['name'] ?>Controller {
<? else: ?>
class <?= $values['page']['name'] ?>Controller extends AppController {
<? endif ?>

    var $name = '<?= $values['page']['entity_name'] ?>';
<? if ($values['page']['layout_name']): ?>
    var $layout = '<?= $values['page']['layout_name'] ?>';
<? endif ?>
<? if ($values['page_filter']): ?>
    <? Tag::init()->pageFilters($values['page_filter']) ?>
<? endif ?>

   /**
    * before_action
    *
    * @param string $action
    * @return void
    */
    function before_action($action) {
        parent::before_action($action);
        <?= Tag::init()->requestInstance($values['page_model']) ?>

    }

   /**
    * index
    *
    * @param
    * @return void
    */
    function index() {
        AppSession::clear('posts');
        $this->redirect_to('list');
    }

   /**
    * cancel
    *
    * @param
    * @return void
    */
    function action_cancel() {
        AppSession::clear('posts');
        $this->redirect_to('list');
    }

   /**
    * list
    *
    * @param
    * @return void
    */
    function action_list() {
        <?= Tag::init()->listValues($values['model'], $values['page']) ?>

        <?= Tag::init()->modelValues($values['page_model']) ?>
        
    }

   /**
    * new
    *
    * @param
    * @return void
    */
    function action_new() {
<? if ($values['model']): ?>
        $this-><?= $values['model']['entity_name'] ?> = DB::table('<?= $values['model']['class_name'] ?>')->init()->takeValues($this->posts['<?= $values['model']['entity_name'] ?>']);
<? endif ?>
    }

   /**
    * edit
    *
    * @param
    * @return void
    */
    function action_edit() {
<? if ($values['model']): ?>
        $this->checkEdit();

        $this-><?= $values['model']['entity_name'] ?> = DB::table('<?= $values['model']['class_name'] ?>')
                    ->fetch($this->params['id'])
                    ->takeValues($this->posts['<?= $values['model']['entity_name'] ?>']);
<? endif ?>
    }

   /**
    * add
    *
    * @param
    * @return void
    */
    function action_add() {
        if (!isPost()) exit;
<? if ($values['model']): ?>
        $posts = $this->posts["<?= $values['model']['entity_name'] ?>"];
        $<?= $values['model']['entity_name'] ?> = DB::table('<?= $values['model']['class_name'] ?>')->insert($posts);

        if ($<?= $values['model']['entity_name'] ?>->errors) {
            $this->redirect_to('new');
        } else {
            $this->redirect_to('index');
        }
<? endif ?>
    }

   /**
    * update
    *
    * @param
    * @return void
    */
    function action_update() {
        if (!isPost()) exit;
<? if ($values['model']): ?>
        $posts = $this->posts["<?= $values['model']['entity_name'] ?>"];
        $<?= $values['model']['entity_name'] ?> = $<?= $values['model']['entity_name'] ?> = DB::table('<?= $values['model']['class_name'] ?>')->update($posts, $this->params['id']);

        if ($<?= $values['model']['entity_name'] ?>->errors) {
            $this->redirect_to('edit', $this->params['id']);
        } else {
            $this->redirect_to('index');
        }
<? endif ?>
    }

   /**
    * delete
    *
    * @param
    * @return void
    */
    function action_delete() {
        if (!isPost()) exit;
<? if ($values['model']): ?>
        DB::table('<?= $values['model']['class_name'] ?>')->delete($this->params['id']);
<? endif ?>
        $this->redirect_to('index');
    }

   /**
    * sort order
    *
    * @param
    * @return void
    */
    function action_sort_order() {
        <?= Tag::init()->listValues($values['model'], $values['page']) ?>
    }

   /**
    * update sort order
    *
    * @param
    * @return void
    */
    function action_update_sort() {
        if (!isPost()) exit;
<? if ($values['model']): ?>
        DB::table('<?= $values['model']['class_name'] ?>')->updateSortOrder($_REQUEST['sort_order']);

        $results['is_success'] = true;
        $results = json_encode($results);
        echo($results);
<? endif ?>
        exit;
    }

}