<?= '<?php' ?>

/**
 * <?= $values['model']['class_name'] ?> 
 * 
 * @create  <?= $values['model']['created_at'] ?> 
 */

require_once 'PgsqlEntity.php';

class _<?= $values['model']['class_name'] ?> extends PgsqlEntity {

<? if ($values['model']['is_none_id_column']): ?>
    var $is_none_id_column = true;
<? else: ?>
<? if ($values['model']['id_column_name']): ?>
    var $id_column = '<?=  $values['model']["id_column_name"] ?>';
<? else: ?>
    var $id_column = 'id';
<? endif ?>
<? endif ?>
    var $name = '<?= $values['model']['name'] ?>';
    var $entity_name = '<?= $values['model']['entity_name']?>';

<? if ($values['attribute']): ?>
    var $columns = array(
<? foreach ($values['attribute'] as $attribute): ?>
<? if ($attribute['name'] != 'id'): ?>
        <?= Model::columnPropaty($attribute) ?>,
<? endif ?>
<? endforeach ?>
    );

    var $column_labels = array (
<? foreach ($values['model']['attribute'] as $attribute): ?>
<? if ($attribute['name'] != 'id'): ?>
        '<?= $attribute['name'] ?>' => '<?= $attribute['label'] ?>',
<? endif ?>
<? endforeach ?>
    );
<? endif ?>

    function __construct($params = null) {
        parent::__construct($params);
    }

   /**
    * validate
    *
    * @param
    * @return void
    */
    function validate() {
        parent::validate();
    }

   /**
    * update sort_order
    *
    * @param array $sort_orders
    * @return void
    */
    function updateSortOrder($sort_orders) {
        if (is_array($sort_orders)) {
            foreach ($sort_orders as $id => $sort_order) {
                if (is_numeric($id) && is_numeric($sort_order)) {
                    $posts['sort_order'] = $sort_order;
                    $this->update($posts, $id);
                }
            }
        }
    }

}