<?= '<?php' ?>

/**
 * <?= $values['model']['class_name'] ?> 
 * 
 * @create
 */

require_once 'PwPgsql.php';

class _<?= $values['model']['class_name'] ?> extends PwPgsql {

<? if ($values['model']['is_none_id_column']): ?>
    public $is_none_id_column = true;
<? else: ?>
<? if ($values['model']['id_column_name']): ?>
    public $id_column = '<?=  $values['model']["id_column_name"] ?>';
<? else: ?>
    public $id_column = 'id';
<? endif ?>
<? endif ?>
    public $name = '<?= $values['model']['name'] ?>';
    public $entity_name = '<?= $values['model']['entity_name']?>';

<? if ($values['columns']): ?>
    public $columns = [
<? foreach ($values['columns'] as $column_name => $column): ?>
<? if ($column_name != 'id'): ?>
        '<?= $column_name ?>' => [<?= $column ?>],
<? endif ?>
<? endforeach ?>
    ];
<? endif ?>

<? if ($values['primary']): ?>
    public $primary_key = '<?= $values['primary'] ?>';
<? endif ?>
<? if ($values['foreign']): ?>
    public $foreign = [
<? foreach ($values['foreign'] as $conname => $foreign): ?>
            '<?= $conname ?>' => [
                                  'column' => '<?= $foreign['attname'] ?>',
                                  'class_name' => '<?= PwFile::phpClassNameFromPwEntityName($foreign['foreign_relname']) ?>',
                                  'foreign_table' => '<?= $foreign['foreign_relname'] ?>',
                                  'foreign_column' => '<?= $foreign['foreign_attname'] ?>',
                                  'cascade_update_type' => '<?= $foreign['confupdtype'] ?>',
                                  'cascade_delete_type' => '<?= $foreign['confdeltype'] ?>',
                                  ],
<? endforeach ?>
    ];
<? endif ?>

<? if ($values['unique']): ?>
    public $unique = [
<? foreach ($values['unique'] as $conname => $uniques): ?>
            '<?= $conname ?>' => [
<? foreach ($uniques as $unique): ?>
                        '<?= $unique['attname'] ?>',
<? endforeach ?>
                        ],
<? endforeach ?>
    ];
<? endif ?>
<? if ($values['index']): ?>
    public $index_keys = [
<? foreach ($values['index'] as $index): ?>
    '<?= $index['indexname'] ?>' => '<?= $index['indexdef'] ?>',
<? endforeach ?>
    ];
<? endif ?>
<? if ($values['model']['old_name']): ?>
    public $old_name = '<?= $values['model']['old_name'] ?>';
<? endif ?>

<? if ($values['old_id_column']): ?>
    public $old_id_column = '<?= $values['old_id_column'] ?>';
<? endif ?>

    function __construct($params = null) {
        parent::__construct($params);
    }

   /**
    * validate
    *
    * @param
    * @return void
    */
    function validate() {
        parent::validate();
    }

}